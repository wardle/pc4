;; Deployment build file
;; This is unnecessarily complicated. pc4 should be a single repository simplifying both dev and release
;; For now, while the structures are not finalised, this creates a build artefact that can be run in production

{:tasks
 {:requires      ([babashka.fs :as fs]
                  [babashka.process :refer [sh]]
                  [clojure.string :as str])

  :init          (do
                   (def version (str "pc4-" (str/trim (:out (sh "git describe")))))
                   (def zip-filename (str version ".zip")))
  
  build-server   (do (println "***** Generating CSS for server-side rendered HTML")
                     (shell {:dir "pc4-server"} "npx tailwindcss -i ./resources/input.css -o ./resources/public/css/output.css"))

  build-frontend (do (println "***** Building pc4 front-end for production release (pc4-ward)")
                     (shell {:dir "pc4-ward"} "yarn shadow-cljs -A prod release app"))

  copy-frontend  (do
                   (println "***** Copying front-end files into pc4-server for deployment")
                   (fs/copy "pc4-ward/resources/public/css/site.css"
                     "pc4-server/resources/public/css/"
                     {:replace-existing true})
                   (fs/delete-tree "pc4-server/resources/public/js/compiled")
                   (fs/create-dirs "pc4-server/resources/public/js/compiled")
                   (fs/copy "pc4-ward/resources/public/js/compiled/manifest.edn"
                     "pc4-server/resources/public/js/compiled")
                   (run!
                     (fn [f] (fs/copy f "pc4-server/resources/public/js/compiled"))
                     (fs/glob "pc4-ward/resources/public/js/compiled" "*.*.js")))
  create-zip     (do
                   (println "***** Zipping files for deployment: creating" zip-filename)
                   (fs/create-dirs version)
                   (fs/create-dirs (str version "/pc4-server"))
                   (fs/create-dirs (str version "/pc4-server/src"))
                   (fs/create-dirs (str version "/pc4-server/resources"))
                   (fs/create-dirs (str version "/pc4-rsdb"))
                   (fs/create-dirs (str version "/pc4-rsdb/src"))
                   (fs/create-dirs (str version "/pc4-rsdb/resources"))
                   (fs/copy "pc4-server/deps.edn" (str version "/pc4-server/"))
                   (fs/copy-tree "pc4-server/src" (str version "/pc4-server/src"))
                   (fs/copy-tree "pc4-server/resources" (str version "/pc4-server/resources"))
                   (fs/copy "pc4-rsdb/deps.edn" (str version "/pc4-rsdb/"))
                   (fs/copy-tree "pc4-rsdb/src" (str version "/pc4-rsdb/src"))
                   (fs/copy-tree "pc4-rsdb/resources" (str version "/pc4-rsdb/resources"))
                   (fs/zip zip-filename version)
                   (fs/delete-tree version))


  upload         (do
                   (println "***** Uploading to production server")
                   (sh "scp -i " (str (fs/home) "/.aws/LightsailDefaultKey-eu-west-2.pem") zip-filename "ec2-user@patientcare.app:"))

  pc4            (do
                   (println "********** Building for production")
                   (run 'build-server)
                   (run 'build-frontend)
                   (run 'create-zip)
                   (run 'upload))}}



