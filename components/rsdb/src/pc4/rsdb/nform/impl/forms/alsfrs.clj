(ns pc4.rsdb.nform.impl.forms.alsfrs
  (:require [clojure.spec.alpha :as s]
            [pc4.rsdb.nform.impl.form :as form]))

;;
;; The legacy WO ALSFRS using a stupid scheme in which ENUMS are stored in the database as long text strings rather than
;; just numbers! ;; As the UI is semi autogenerated, it also has both cutting_food and _using_gastrostomy as options
;; but then validates that the user cannot complete both. This simply reflecting difficulty in switching the item
;; descriptors dynamically. Possibly worse, the legacy system incorrectly spells orthopnoea as orthopneoa and dyspnoea as dyspneoa!
;;
;; Far better would be a boolean which switches at the UI level (and is recorded) but then we simply
;; score as per the numeric values. As such, we use that far simpler representation here, and map from and to
;; the legacy representation. At some point, the simpler representation could be simply stored as-is in an 'nf' store.

(def legacy-mapping
  {[:speech 4]                    {:text "Normal speech" :enum "NORMAL_SPEECH"}
   [:speech 3]                    {:text "Detectable speech disturbance" :enum "DETECTABLE_SPEECH_DISTURBANCE"}
   [:speech 2]                    {:text "Intelligible with repeating" :enum "INTELLIGIBLE_WITH_REPEATING"}
   [:speech 1]                    {:text "Speech combined with nonvocal" :enum "SPEECH_COMBINED_WITH_NONVOCAL"}
   [:speech 0]                    {:text "Loss of useful speech" :enum "LOSS_OF_USEFUL_SPEECH"}

   [:salivation 4]                {:text "Normal" :enum "NORMAL"}
   [:salivation 3]                {:text "Slight but definite excess of saliva in mouth; may have nighttime drooling" :enum "SLIGHT_BUT_DEFINITE_EXCESS_OF_SALIVA_IN_MOUTH__MAY_HAVE_NIGHTTIME_DROOLING"}
   [:salivation 2]                {:text "Moderately excessive saliva; may have minimal drooling" :enum "MODERATELY_EXCESSIVE_SALIVA__MAY_HAVE_MINIMAL_DROOLING"}
   [:salivation 1]                {:text "Marked excess of saliva with some drooling" :enum "MARKED_EXCESS_OF_SALIVA_WITH_SOME_DROOLING"}
   [:salivation 0]                {:text "Marked drooling; requires constant tissue or handkerchief" :enum "MARKED_DROOLING__REQUIRES_CONSTANT_TISSUE_OR_HANDKERCHIEF"}

   [:swallowing 4]                {:text "Normal eating habits" :enum "NORMAL_EATING_HABITS"}
   [:swallowing 3]                {:text "Early eating problems; occasional choking" :enum "EARLY_EATING_PROBLEMS__OCCASIONAL_CHOKING"}
   [:swallowing 2]                {:text "Dietary consistency changes" :enum "DIETARY_CONSISTENCY_CHANGES"}
   [:swallowing 1]                {:text "Needs supplementary tube feeding" :enum "NEEDS_SUPPLEMENTARY_TUBE_FEEDING"}
   [:swallowing 0]                {:text "NIL by mouth; exclusive parenteral or enteral feeding" :enum "NIL_BY_MOUTH__EXCLUSIVE_PARENTERAL_OR_ENTERAL_FEEDING"}

   [:handwriting 4]               {:text "Normal" :enum "NORMAL"}
   [:handwriting 3]               {:text "Slow or sloppy; all words legible" :enum "SLOW_OR_SLOPPY__ALL_WORDS_LEGIBLE"}
   [:handwriting 2]               {:text "Not all words legible" :enum "NOT_ALL_WORDS_LEGIBLE"}
   [:handwriting 1]               {:text "Able to grip pen; unable to write" :enum "ABLE_TO_GRIP_PEN__UNABLE_TO_WRITE"}
   [:handwriting 0]               {:text "Unable to grip pen" :enum "UNABLE_TO_GRIP_PEN"}

   [:cutting_food 4]              {:text "Normal" :enum "NORMAL"}
   [:cutting_food 3]              {:text "Somewhat slow, clumsy, no help needed" :enum "SOMEWHAT_SLOW_CLUMSY_NO_HELP_NEEDED"}
   [:cutting_food 2]              {:text "Can cut most foods, some help needed" :enum "CAN_CUT_MOST_FOODS_SOME_HELP_NEEDED"}
   [:cutting_food 1]              {:text "Food cut by someone, can feed slowly" :enum "FOOD_CUT_BY_SOMEONE_CAN_FEED_SLOWLY"}
   [:cutting_food 0]              {:text "Needs to be fed" :enum "NEEDS_TO_BE_FED"}
   [:cutting_food nil]            {:text "Not applicable - using gastrostomy" :enum "NOT_APPLICABLE_USING_GASTROSTOMY"}

   [:using_gastrostomy nil]       {:text "Not applicable - does not have gastrostomy" :enum "NOT_APPLICABLE_DOES_NOT_HAVE_GASTROSTOMY"}
   [:using_gastrostomy 4]         {:text "Normal" :enum "NORMAL"}
   [:using_gastrostomy 3]         {:text "Clumsy but able to perform independently" :enum "CLUMSY_BUT_ABLE_TO_PERFORM_INDEPENDENTLY"}
   [:using_gastrostomy 2]         {:text "Some help needed with closures/fasteners" :enum "SOME_HELP_NEEDED_WITH_CLOSURES_FASTENERS"}
   [:using_gastrostomy 1]         {:text "Provides minimal assistance to caregiver" :enum "PROVIDES_MINIMAL_ASSISTANCE_TO_CAREGIVER"}
   [:using_gastrostomy 0]         {:text "Unable to perform any aspect of task" :enum "UNABLE_TO_PERFORM_ANY_ASPECT_OF_TASK"}

   [:dressing_and_hygiene 4]      {:text "Normal" :enum "NORMAL"}
   [:dressing_and_hygiene 3]      {:text "Independent and complete self-care with effort" :enum "INDEPENDENT_AND_COMPLETE_SELF_CARE_WITH_EFFORT"}
   [:dressing_and_hygiene 2]      {:text "Intermittent assistance or substitute methods" :enum "INTERMITTENT_ASSISTANCE_OR_SUBSTITUTE_METHODS"}
   [:dressing_and_hygiene 1]      {:text "Needs attendant for self-care" :enum "NEEDS_ATTENDANT_FOR_SELF_CARE"}
   [:dressing_and_hygiene 0]      {:text "Total dependence" :enum "TOTAL_DEPENDENCE"}

   [:turning_in_bed 4]            {:text "Normal" :enum "NORMAL"}
   [:turning_in_bed 3]            {:text "Somewhat slow and clumsy" :enum "SOMEWHAT_SLOW_AND_CLUMSY"}
   [:turning_in_bed 2]            {:text "Can turn alone or adjust sheets with great difficulty" :enum "CAN_TURN_ALONE_OR_ADJUST_SHEETS_WITH_GREAT_DIFFICULTY"}
   [:turning_in_bed 1]            {:text "Can initiate but not turn or adjust sheets alone" :enum "CAN_INITIATE_BUT_NOT_TURN_OR_ADJUST_SHEETS_ALONE"}
   [:turning_in_bed 0]            {:text "Helpless" :enum "HELPLESS"}

   [:walking 4]                   {:text "Normal" :enum "NORMAL"}
   [:walking 3]                   {:text "Early ambulation difficulties" :enum "EARLY_AMBULATION_DIFFICULTIES"}
   [:walking 2]                   {:text "Walks with assistance" :enum "WALKS_WITH_ASSISTANCE"}
   [:walking 1]                   {:text "Non-ambulatory functional movement" :enum "NON_AMBULATORY_FUNCTIONAL_MOVEMENT"}
   [:walking 0]                   {:text "No purposeful leg movement" :enum "NO_PURPOSEFUL_LEG_MOVEMENT"}

   [:climbing_stairs 4]           {:text "Normal" :enum "NORMAL"}
   [:climbing_stairs 3]           {:text "Slow" :enum "SLOW"}
   [:climbing_stairs 2]           {:text "Mild unsteadiness or fatigue" :enum "MILD_UNSTEADINESS_OR_FATIGUE"}
   [:climbing_stairs 1]           {:text "Needs assistance" :enum "NEEDS_ASSISTANCE"}
   [:climbing_stairs 0]           {:text "Cannot do" :enum "CANNOT_DO"}

   [:dyspnoea 4]                  {:text "None" :enum "NONE"}
   [:dyspnoea 3]                  {:text "Occurs when walking" :enum "OCCURS_WHEN_WALKING"}
   [:dyspnoea 2]                  {:text "Occurs with eating, bathing, or dressing (ADL)" :enum "OCCURS_WITH_EATING_BATHING_OR_DRESSING__ADL"}
   [:dyspnoea 1]                  {:text "Occurs at rest, difficulty breathing when sitting or lying" :enum "OCCURS_AT_REST_DIFFICULTY_BREATHING_WHEN_SITTING_OR_LYING"}
   [:dyspnoea 0]                  {:text "Significant difficulty; considering using mechanical support" :enum "SIGNIFICANT_DIFFICULTY__CONSIDERING_USING_MECHANICAL_SUPPORT"}

   [:orthopnoea 4]                {:text "None" :enum "NONE"}
   [:orthopnoea 3]                {:text "Some difficulty sleeping due to shortness of breath" :enum "SOME_DIFFICULTY_SLEEPING_DUE_TO_SHORTNESS_BREATH"}
   [:orthopnoea 2]                {:text "Needs more than two pillows to sleep" :enum "NEEDS_MORE_THAN_TWO_PILLOWS_TO_SLEEP"}
   [:orthopnoea 1]                {:text "Can only sleep sitting up" :enum "CAN_ONLY_SLEEP_SITTING_UP"}
   [:orthopnoea 0]                {:text "Unable to sleep" :enum "UNABLE_TO_SLEEP"}

   [:respiratory_insufficiency 4] {:text "None" :enum "NONE"}
   [:respiratory_insufficiency 3] {:text "Intermittent use of BiPAP" :enum "INTERMITTENT_USE_OF_BIPAP"}
   [:respiratory_insufficiency 2] {:text "Continuous use BiPAP during night" :enum "CONTINUOUS_USE_BIPAP_DURING_NIGHT"}
   [:respiratory_insufficiency 1] {:text "Continuous use BiPAP during night and day" :enum "CONTINUOUS_USE_BIPAP_DURING_NIGHT_AND_DAY"}
   [:respiratory_insufficiency 0] {:text "Invasive mechanical ventilation (intubation or tracheostomy)" :enum "INVASIVE_MECHANICAL_VENTILATION_INTUBATION_OR_TRACHEHEOSTOMY"}})

(def by-enum
  (reduce-kv (fn [acc [q score] {:keys [enum] :as v}]
               (assoc acc [q enum] (assoc v :score score)))
             {} legacy-mapping))

(defn enum->score
  [category]
  (fn [enum] (get-in by-enum [[category enum] :score])))

(defn score->enum
  [category]
  (fn [score] (get-in legacy-mapping [[category score] :enum])))

(comment
  (get legacy-mapping [:dyspnoea 4])
  (get by-enum [:dyspnoea "NONE"]))

(s/def ::speech (s/int-in 0 5))
(s/def ::salivation (s/int-in 0 5))
(s/def ::swallowing (s/int-in 0 5))
(s/def ::handwriting (s/int-in 0 5))
(s/def ::cutting_food (s/int-in 0 5))
(s/def ::dressing_and_hygiene (s/int-in 0 5))
(s/def ::turning_in_bed (s/int-in 0 5))
(s/def ::walking (s/int-in 0 5))
(s/def ::climbing_stairs (s/int-in 0 5))
(s/def ::dyspnoea (s/int-in 0 5))
(s/def ::orthopnoea (s/int-in 0 5))
(s/def ::respiratory_insufficiency (s/int-in 0 5))
(s/def ::using_gastrostomy boolean?)

(defmethod form/spec :alsfrs-r/v1 [_]
  (s/keys :req-un [::climbing_stairs
                   ::cutting_food
                   ::dressing_and_hygiene
                   ::dyspnoea
                   ::handwriting
                   ::orthopnoea
                   ::respiratory_insufficiency
                   ::salivation
                   ::speech
                   ::swallowing
                   ::turning_in_bed
                   ::using_gastrostomy
                   ::walking]))

(defn bulbar-score
  [{:keys [salivation speech swallowing]}]
  (+ speech salivation swallowing))

(defn limb-score
  [{:keys [climbing_stairs cutting_food dressing_and_hygiene handwriting turning_in_bed walking]}]
  (+ handwriting cutting_food dressing_and_hygiene turning_in_bed walking climbing_stairs))

(defn respiratory-score
  [{:keys [dyspnoea orthopnoea respiratory_insufficiency]}]
  (+ dyspnoea orthopnoea respiratory_insufficiency))

(defn total-score
  [{:keys [climbing_stairs cutting_food dressing_and_hygiene dyspnoea handwriting orthopnoea respiratory_insufficiency salivation speech swallowing turning_in_bed walking]}]
  (+ climbing_stairs dressing_and_hygiene cutting_food dyspnoea handwriting orthopnoea respiratory_insufficiency salivation speech swallowing turning_in_bed walking))

(defmethod form/summary :alsfrs-r/v1
  [form]
  (let [bulbar (bulbar-score form)
        limb (limb-score form)
        respiratory (respiratory-score form)]
    (str (+ bulbar limb respiratory) "/48 (bulbar: " bulbar "/12, limb: " limb "/24, resp: " respiratory "/12)")))

(defmethod form/hydrate :alsfrs-r/v1
  [{:keys [cutting_food dyspneoa orthopneoa using_gastrostomy] :as form}]
  (let [cutting_food' ((enum->score :cutting_food) cutting_food)
        using_gastrostomy' ((enum->score :using_gastrostomy) using_gastrostomy)
        gastrostomy? (some? using_gastrostomy')]
    (-> form
        (assoc :cutting_food (or cutting_food' using_gastrostomy') ;; use whichever gives a score
               :using_gastrostomy gastrostomy?              ;; and turn this into a flag
               :orthopnoea ((enum->score :orthopnoea) orthopneoa) ;; note we change the spelling here!!
               :dyspnoea ((enum->score :dyspnoea) dyspneoa))
        (dissoc :dyspneoa :orthopneoa)
        (update :climbing_stairs (enum->score :climbing_stairs))
        (update :dressing_and_hygiene (enum->score :dressing_and_hygiene))
        (update :handwriting (enum->score :handwriting))
        (update :respiratory_insufficiency (enum->score :respiratory_insufficiency))
        (update :salivation (enum->score :salivation))
        (update :speech (enum->score :speech))
        (update :swallowing (enum->score :swallowing))
        (update :turning_in_bed (enum->score :turning_in_bed))
        (update :walking (enum->score :walking)))))

(defmethod form/dehydrate :alsfrs-r/v1
  [{:keys [using_gastrostomy cutting_food dyspnoea orthopnoea] :as form}]
  (-> form
      (assoc :cutting_food
             (if using_gastrostomy
               ((score->enum :cutting_food) nil)            ;; set cutting food to 'not applicable' when using gastrostomy
               ((score->enum :cutting_food) cutting_food))  ;; otherwise interpret as cutting food
             :using_gastrostomy
             (if using_gastrostomy
               ((score->enum :using_gastrostomy) cutting_food) ;; interpret score through 'using gastrostomy' enum
               ((score->enum :using_gastrostomy) nil))      ;; otherwise set 'not applicable'
             :dyspneoa ((score->enum :dyspnoea) dyspnoea)
             :orthopneoa ((score->enum :orthopnoea) orthopnoea))
      (dissoc :dyspnoea :orthopnoea)
      (update :climbing_stairs (score->enum :climbing_stairs))
      (update :dressing_and_hygiene (score->enum :dressing_and_hygiene))
      (update :handwriting (score->enum :handwriting))
      (update :respiratory_insufficiency (score->enum :respiratory_insufficiency))
      (update :salivation (score->enum :salivation))
      (update :speech (score->enum :speech))
      (update :swallowing (score->enum :swallowing))
      (update :turning_in_bed (score->enum :turning_in_bed))
      (update :walking (score->enum :walking))))

(comment
  (require '[clojure.spec.gen.alpha :as gen])
  (map form/summary (gen/sample (form/gen-form {:using {:form_type :alsfrs-r/v1}}) 10000))
  (every? #(= % (form/hydrate (form/dehydrate %))) (gen/sample (form/gen-form {:using {:form_type :alsfrs-r/v1}}) 10000)))